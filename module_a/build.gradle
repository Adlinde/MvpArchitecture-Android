if(isBuildAsModule.toBoolean()){
    apply plugin: 'com.android.application'
}else{
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ moduleName : project.getName() ]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            if (isBuildAsModule.toBoolean()) {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/library/AndroidManifest.xml'
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation rootProject.ext.dependencies["appcompat-v7"]
    //Junit
    testImplementation rootProject.ext.dependencies["junit"]
    //espresso
    androidTestImplementation(rootProject.ext.dependencies["espresso-core"]) {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    }
    androidTestImplementation(rootProject.ext.dependencies["espresso-test-runner"]) {
        exclude module: 'support-annotations'
    }
    //mockito
    testImplementation rootProject.ext.dependencies["mockito-kotlin"]
    //robolectric
    testImplementation rootProject.ext.dependencies["robolectric"]
    testImplementation rootProject.ext.dependencies["robolectric-v4"]

    implementation rootProject.ext.dependencies["router"]
    annotationProcessor rootProject.ext.dependencies["router-compiler"]
    //dagger2
    implementation rootProject.ext.dependencies["dagger-android"]
    implementation rootProject.ext.dependencies["dagger-android-support"]
    annotationProcessor rootProject.ext.dependencies["dagger-compiler"]
    annotationProcessor rootProject.ext.dependencies["dagger-android-processor"]

    //kotlin
    implementation rootProject.ext.dependencies["kotlin-android"]

    api project(':module_core')
    api project(':module_business')
}
